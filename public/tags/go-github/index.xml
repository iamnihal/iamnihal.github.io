<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>go, github on Nihal</title>
    <link>https://nihalchoudhary.in/tags/go-github/</link>
    <description>Recent content in go, github on Nihal</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Sun, 31 Dec 2023 17:17:04 +0530</lastBuildDate>
    <atom:link href="https://nihalchoudhary.in/tags/go-github/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Utilizing Github Actions to Serve a tool via Web</title>
      <link>https://nihalchoudhary.in/posts/2023/12/utilizing-github-actions-to-serve-a-tool-via-web/</link>
      <pubDate>Sun, 31 Dec 2023 17:17:04 +0530</pubDate>
      <guid>https://nihalchoudhary.in/posts/2023/12/utilizing-github-actions-to-serve-a-tool-via-web/</guid>
      <description>TL;DR: I employed GitHub Actions to execute a Go utility, essentially utilizing GitHub Actions as a server to serve my Go tool via a Web interface.&#xA;Just for fun, I wanted to serve one of my Go tools gh-archive through a web interface. After some thought, I decided to make use of (or exploit) GitHub Actions.&#xA;Strategy: Gather user input through an HTML form (hosted via GitHub pages). Trigger a dispatch event to create a workflow in GitHub with a unique name.</description>
    </item>
  </channel>
</rss>
